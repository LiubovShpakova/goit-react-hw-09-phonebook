{"version":3,"sources":["redux/contacts/actions.jsx","redux/auth/auth-selectors.jsx","components/PrivateRoute.jsx","components/PublicRoute.jsx","components/Navigation/AuthNav.jsx","components/Navigation/user.png","components/Navigation/UserMenu.jsx","components/Navigation/AppBar.jsx","components/Loader/Loader.jsx","App.js","redux/contacts/reduser.jsx","redux/auth/auth-reducer.jsx","redux/store.jsx","index.js","redux/auth/auth-operations.jsx","redux/auth/auth-actions.jsx"],"names":["contactActions","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","editContactRequest","editContactSuccess","editContactError","selectors","getIsAuthenticated","state","auth","loggedIn","getUsername","user","name","connect","isAuthenticated","Component","component","redirectTo","routeProps","render","props","to","restricted","AuthNav","Button","variant","className","activeClassName","Styles","styled","div","UserMenu","useSelector","dispatch","useDispatch","onLogout","useCallback","operations","logOut","src","avatar","alt","width","type","onClick","AppBar","Navbar","collapseOnSelect","expand","bg","Container","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","exact","Spinner","color","height","timeout","HomePage","lazy","RegisterPage","LoginPage","ContactsPage","App","useEffect","getCurrentUser","fallback","path","items","createReducer","_","payload","filter","newState","contact","loading","error","combineReducers","initialUserState","email","authActions","registerSuccess","loginSuccess","logoutSuccess","getCurrentUserSuccess","token","registerError","loginError","getCurrentUserError","setError","logoutError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactReducer","persistReducer","authReducers","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","axios","defaults","baseURL","set","headers","common","Authorization","unset","register","credentials","a","registerRequest","post","response","data","message","logIn","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get"],"mappings":"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","file":"static/js/main.96bfdfb9.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nconst fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nconst addContactRequest = createAction('contacts/addContactRequest');\r\nconst addContactSuccess = createAction('contacts/addContactSuccess');\r\nconst addContactError = createAction('contacts/addContactError');\r\n\r\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nconst deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst editContactRequest = createAction('contacts/editContactRequest');\r\nconst editContactSuccess = createAction('contacts/editContactSuccess');\r\nconst editContactError = createAction('contacts/editContactError');\r\nconst contactActions = {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  editContactRequest,\r\n  editContactSuccess,\r\n  editContactError,\r\n};\r\n\r\nexport default contactActions;\r\n","const getIsAuthenticated = state => state.auth.loggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst selectors = { getIsAuthenticated, getUsername };\r\nexport default selectors;\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport selectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: selectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport selectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: selectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import { Button } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const AuthNav = () => {\r\n  return (\r\n    <>\r\n      <Button variant=\"secondary\" className=\"m-2\">\r\n        <NavLink\r\n          to=\"/register\"\r\n          className=\"nav__link\"\r\n          activeClassName=\"active__link\"\r\n        >\r\n          Sign Up\r\n        </NavLink>\r\n      </Button>\r\n      <Button variant=\"secondary\" className=\"m-2\">\r\n        <NavLink\r\n          to=\"/login\"\r\n          className=\"nav__link\"\r\n          activeClassName=\"active__link\"\r\n        >\r\n          Log In\r\n        </NavLink>\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/user.c8077d55.png\";","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useCallback } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport selectors from '../../redux/auth/auth-selectors';\r\nimport avatar from './user.png';\r\nimport operations from '../../redux/auth/auth-operations';\r\nimport styled from 'styled-components';\r\nconst Styles = styled.div`\r\n  .btn-secondary,\r\n  h4,\r\n  .avatar {\r\n    color: #d1abc4;\r\n    margin-right: 5px;\r\n  }\r\n  div {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(selectors.getUsername);\r\n  const dispatch = useDispatch();\r\n  const onLogout = useCallback(() => {\r\n    dispatch(operations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Styles>\r\n        <div>\r\n          <img src={avatar} alt=\"\" width=\"40\" className=\"avatar\" />\r\n          <h4>Welcome, {name}</h4>\r\n          <Button\r\n            variant=\"secondary\"\r\n            className=\"mr-2\"\r\n            type=\"button\"\r\n            onClick={onLogout}\r\n          >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </Styles>\r\n    </>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport selectors from '../../redux/auth/auth-selectors';\r\nimport { Navbar, Nav, Container } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { AuthNav } from './AuthNav';\r\nimport styled from 'styled-components';\r\nimport UserMenu from './UserMenu';\r\n\r\nconst Styles = styled.div`\r\n  a,\r\n  .navbar-brand,\r\n  navbar-nav .nav-link {\r\n    color: #d1abc4;\r\n    &:hover {\r\n      color: white;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(selectors.getIsAuthenticated);\r\n\r\n  return (\r\n    <>\r\n      <Styles>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Container>\r\n            <Navbar.Brand>Phonebook</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n              <Nav className=\"mr-auto\">\r\n                <Nav.Link>\r\n                  <NavLink\r\n                    exact\r\n                    to=\"/\"\r\n                    className=\"nav__link\"\r\n                    activeClassName=\"active__link\"\r\n                  >\r\n                    Home\r\n                  </NavLink>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                  {isAuthenticated && (\r\n                    <NavLink\r\n                      to=\"/contacts\"\r\n                      className=\"nav__link\"\r\n                      activeClassName=\"active__link\"\r\n                    >\r\n                      Contacts\r\n                    </NavLink>\r\n                  )}\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Nav>{isAuthenticated ? <UserMenu /> : <AuthNav />}</Nav>\r\n            </Navbar.Collapse>\r\n          </Container>\r\n        </Navbar>\r\n      </Styles>\r\n    </>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nexport default class Spinner extends Component {\r\n  render() {\r\n    return (\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#d1abc4\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, lazy, Suspense } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport operations from './redux/auth/auth-operations';\n\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport AppBar from './components/Navigation/AppBar';\nimport Spinner from './components/Loader/Loader';\n\nconst HomePage = lazy(() => import('./pages/HomePage'));\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\nconst ContactsPage = lazy(() => import('./pages/ContactsPage'));\n\nexport default function App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(operations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n      <Suspense fallback={<Spinner />}>\n        <Switch>\n          <PublicRoute exact path=\"/\" component={HomePage} />\n          <PrivateRoute\n            exact\n            path=\"/contacts\"\n            redirectTo=\"/login\"\n            component={ContactsPage}\n          />\n          <PublicRoute\n            exact\n            path=\"/register\"\n            redirectTo=\"/contacts\"\n            restricted\n            component={RegisterPage}\n          />\n          <PublicRoute\n            exact\n            path=\"/login\"\n            redirectTo=\"/contacts\"\n            restricted\n            component={LoginPage}\n          />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport contactActions from './actions';\r\n\r\nconst items = createReducer([], {\r\n  [contactActions.fetchContactsSuccess]: (_, { payload }) => payload,\r\n\r\n  [contactActions.addContactSuccess]: (state, { payload }) => [\r\n    ...state,\r\n    payload,\r\n  ],\r\n\r\n  [contactActions.deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n\r\n  [contactActions.editContactSuccess]: (state, { payload }) => {\r\n    const newState = state.filter(contact => contact.id !== payload.id);\r\n    return [...newState, payload];\r\n  },\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [contactActions.fetchContactsRequest]: () => true,\r\n  [contactActions.fetchContactsSuccess]: () => false,\r\n  [contactActions.fetchContactsError]: () => false,\r\n  [contactActions.addContactRequest]: () => true,\r\n  [contactActions.addContactSuccess]: () => false,\r\n  [contactActions.addContactError]: () => false,\r\n  [contactActions.deleteContactRequest]: () => true,\r\n  [contactActions.deleteContactSuccess]: () => false,\r\n  [contactActions.deleteContactError]: () => false,\r\n  [contactActions.editContactRequest]: () => true,\r\n  [contactActions.editContactSuccess]: () => false,\r\n  [contactActions.editContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [contactActions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport authActions from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst loggedIn = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.logoutSuccess]: () => false,\r\n  [authActions.registerError]: false,\r\n  [authActions.loginError]: false,\r\n  [authActions.getCurrentUserError]: false,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: setError,\r\n  [authActions.loginError]: setError,\r\n  [authActions.logoutError]: setError,\r\n  [authActions.getCurrentUserError]: setError,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  loggedIn,\r\n  error,\r\n});\r\n\r\n/*const user = createReducer(initialUserState, {});\r\n\r\nconst token = createReducer(null, {});\r\n\r\nconst loggedIn = createReducer(false, {});\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  loading,\r\n  error,\r\n});*/\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n// import logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/reduser';\r\nimport authReducers from '../redux/auth/auth-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  // logger,\r\n];\r\n// настройки для сохранения данных в local storage\r\nconst authPersistConfig = {\r\n  key: 'auth', //название ключа, который будет отображаться в local storage\r\n\r\n  storage,\r\n\r\n  whitelist: ['token'], //что отображать в local storage\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReducer,\r\n    auth: persistReducer(authPersistConfig, authReducers),\r\n  },\r\n  middleware,\r\n  // devTools: process.env.NODE_ENV === \"development\",\r\n});\r\nconst persistor = persistStore(store);\r\n\r\nexport default { persistor, store };\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import axios from 'axios';\r\nimport authActions from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n/*\r\n * POST @ /users/signup\r\n * body { name, email, password }\r\n *\r\n * После успешной регистрации добавляем токен в HTTP-заголовок\r\n */\r\nconst register = credentials => async dispatch => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/login\r\n * body:\r\n *    { email, password }\r\n *\r\n * После успешного логина добавляем токен в HTTP-заголовок\r\n */\r\nconst logIn = credentials => async dispatch => {\r\n  dispatch(authActions.loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post('/users/login', credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * POST @ /users/logout\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. После успешного логаута, удаляем токен из HTTP-заголовка\r\n */\r\nconst logOut = () => async dispatch => {\r\n  dispatch(authActions.logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\n/*\r\n * GET @ /users/current\r\n * headers:\r\n *    Authorization: Bearer token\r\n *\r\n * 1. Забираем токен из стейта через getState()\r\n * 2. Если токена нет, выходим не выполняя никаких операций\r\n * 3. Если токен есть, добавляет его в HTTP-заголовок и выполянем операцию\r\n */\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get('/users/current');\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\nconst operations = { token, register, logIn, logOut, getCurrentUser };\r\nexport default operations;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst registerRequest = createAction('auth/registerRequest');\r\nconst registerSuccess = createAction('auth/registerSuccess');\r\nconst registerError = createAction('auth/registerError');\r\n\r\nconst loginRequest = createAction('auth/loginRequest');\r\nconst loginSuccess = createAction('auth/loginSuccess');\r\nconst loginError = createAction('auth/loginError');\r\n\r\nconst logoutRequest = createAction('auth/logoutRequest');\r\nconst logoutSuccess = createAction('auth/logoutSuccess');\r\nconst logoutError = createAction('auth/logoutError');\r\n\r\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\r\n\r\nconst authActions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default authActions;\r\n"],"sourceRoot":""}