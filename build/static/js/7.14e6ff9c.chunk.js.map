{"version":3,"sources":["pages/RegisterPage.jsx"],"names":["Styles","styled","div","LoginPage","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","value","className","onSubmit","event","preventDefault","operations","register","onRegister","toast","error","Group","Label","Control","type","placeholder","onChange","controlId","variant","autoClose"],"mappings":"gSAQMA,EAASC,IAAOC,IAAV,0EAMG,SAASC,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUT,EAAoB,EAApBA,KAAMU,EAAc,EAAdA,MACtC,OAAQV,GACN,IAAK,OACH,OAAOC,EAAQS,GACjB,IAAK,QACH,OAAOP,EAASO,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,SAmBN,OACE,sBAAKC,UAAU,iBAAf,UACE,cAAChB,EAAD,UACE,eAAC,IAAD,CAAMiB,SAjBS,SAAAC,GACnBA,EAAMC,iBACO,KAATd,GAAyB,KAAVE,GAA6B,KAAbE,IAJlB,SAAAS,GAASP,EAASS,IAAWC,SAASH,IAUvDI,CAAW,CAAEjB,OAAME,QAAOE,aAC1BH,EAAQ,IACRE,EAAS,IACTE,EAAY,KARVa,IAAMC,MAAM,6CAA8C,CACxDR,UAAW,iBAaX,UACE,eAAC,IAAKS,MAAN,WACE,cAAC,IAAKC,MAAN,mBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,OACLC,YAAY,aACZxB,KAAK,OACLU,MAAOV,EACPyB,SAAUjB,OAId,eAAC,IAAKY,MAAN,CAAYM,UAAU,iBAAtB,UACE,cAAC,IAAKL,MAAN,4BACA,cAAC,IAAKC,QAAN,CACEC,KAAK,QACLC,YAAY,cACZxB,KAAK,QACLU,MAAOR,EACPuB,SAAUjB,OAId,eAAC,IAAKY,MAAN,CAAYM,UAAU,oBAAtB,UACE,cAAC,IAAKL,MAAN,uBACA,cAAC,IAAKC,QAAN,CACEC,KAAK,WACLC,YAAY,WACZxB,KAAK,WACLU,MAAON,EACPqB,SAAUjB,OAGd,cAAC,IAAD,CAAQmB,QAAQ,YAAYJ,KAAK,SAAjC,0BAKJ,cAAC,IAAD,CAAgBK,UAAW","file":"static/js/7.14e6ff9c.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport operations from '../redux/auth/auth-operations';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nconst Styles = styled.div`\r\n  .btn-secondary {\r\n    color: #d1abc4;\r\n  }\r\n`;\r\n\r\nexport default function LoginPage() {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const onRegister = event => dispatch(operations.register(event));\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    if (name === '' || email === '' || password === '') {\r\n      toast.error('It is necessary to fill in the form fields', {\r\n        className: 'error_toast',\r\n      });\r\n      return;\r\n    }\r\n    onRegister({ name, email, password });\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"form__register\">\r\n      <Styles>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Enter email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Group>\r\n          <Button variant=\"secondary\" type=\"submit\">\r\n            Sign Up\r\n          </Button>\r\n        </Form>\r\n      </Styles>\r\n      <ToastContainer autoClose={3000} />\r\n    </div>\r\n  );\r\n}\r\n/*class RegisterPage extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      this.state.name === '' ||\r\n      this.state.email === '' ||\r\n      this.state.password === ''\r\n    ) {\r\n      toast.error('It is necessary to fill in the form fields', {\r\n        className: 'error_toast',\r\n      });\r\n      return;\r\n    }\r\n    this.props.onRegister(this.state);\r\n\r\n    this.setState({ name: '', email: '', password: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div className=\"form__register\">\r\n        <Styles>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Group>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter name\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicEmail\">\r\n              <Form.Label>Email address</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formBasicPassword\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={this.handleChange}\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"secondary\" type=\"submit\">\r\n              Sign Up\r\n            </Button>\r\n          </Form>\r\n        </Styles>\r\n        <ToastContainer autoClose={3000} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: operations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage);*/\r\n"],"sourceRoot":""}